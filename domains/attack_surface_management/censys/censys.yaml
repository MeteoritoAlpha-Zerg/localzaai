# Censys
name: "censys"
category: "Security Intelligence"
description: "Create an API integration with Censys per its API specification"

specs:
  - description: |
      The Censys Connector is able to authenticate with Censys per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Censys connector is able to authenticate properly with a Censys instance;
      The Censys connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Censys Connector is able to list available search indices per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Censys
    postconditions: |
      Connector successfully enumerates available search indices (hosts, certificates, etc.) to populate the target options of the CensysTarget;

  - description: |
      Censys Connector is able to retrieve account information and usage limits
    preconditions: |
      A valid authenticated session with Censys
    postconditions: |
      Per the configuration as contained in CensysTarget as provided to CensysConnectorTools, it is possible
      to get account information including API usage limits, remaining quota, and subscription details
      as may be relevant;
      Ensure that the respective get_censys_account_info function in the CensysConnectorTools is not hardcoding
      any return values;

  - description: |
      Censys Connector is able to search hosts using query parameters
    preconditions: |
      A valid authenticated session with Censys
    postconditions: |
      Connector successfully searches hosts based on provided query parameters and filters;
      Results include host IP addresses, services, certificates, and other relevant metadata;

  - description: |
      Censys Connector is able to retrieve detailed host information
    preconditions: |
      A valid authenticated session with Censys
    postconditions: |
      Connector successfully retrieves detailed information for a specific host IP address
      including services, ports, certificates, and vulnerability data when available;

  - description: |
      Censys Connector is able to search certificates using query parameters
    preconditions: |
      A valid authenticated session with Censys
    postconditions: |
      Connector successfully searches certificates based on provided query parameters;
      Results include certificate details, validity periods, and associated hosts;

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Censys search indices
    preconditions: |
      An existing Censys API ID and secret
    postconditions: |
      Possible to retrieve the list of available Censys search indices using get_query_target_options
      and to then use this to set the options in a given CensysConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real indices, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      Retrieve account information for the authenticated Censys account
    preconditions: |
      An existing Censys API ID and secret
    postconditions: |
      Possible to retrieve account information including usage limits and quotas by way of connector tools;
      This information includes details of the account to be listed in results; 
      These must be real account details, and not simulated;
    function_to_run: !python/file 4-test_account_info.py

  - description: |
      Search hosts using provided query parameters
    preconditions: |
      An existing Censys API ID and secret
    postconditions: |
      Possible to search for hosts using query parameters passed to the connector tools;
      This search returns actual host data including IP addresses, services, and metadata; 
      These must be real search results, and not simulated;
    function_to_run: !python/file 5-test_host_search.py

  - description: |
      Retrieve detailed information for a specific host
    preconditions: |
      An existing Censys API ID and secret
    postconditions: |
      Possible to retrieve detailed host information for a specific IP address passed as a param to the connector tools;
      This information includes comprehensive host details, services, and certificates; 
      These must be real host details, and not simulated;
    function_to_run: !python/file 6-test_host_details.py

  - description: |
      Search certificates using provided query parameters
    preconditions: |
      An existing Censys API ID and secret
    postconditions: |
      Possible to search for certificates using query parameters passed to the connector tools;
      This search returns actual certificate data including validity, issuers, and associated hosts; 
      These must be real certificate results, and not simulated;
    function_to_run: !python/file 7-test_certificate_search.py

connector_references: 
  - description: "Censys logo"
    file_path: "assets/censys.svg"
    environment_path: "connectors/censys/censys.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "censys_api_id"
    description: "The API ID for authenticating with Censys, note this should be included as api_id in CensysConnectorConfig"
    value: !env/var 

  - name: "censys_api_secret"
    description: "API Secret for authenticating with Censys, note this should be included as api_secret in CensysConnectorConfig"
    value: !env/var 

  - name: "censys_base_url"
    description: "Base URL for Censys API (defaults to https://search.censys.io/api/v2)"
    value: "https://search.censys.io/api/v2"

  - name: "censys_api_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "censys_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "censys_default_page_size"
    description: "Default number of results to return per page"
    value: 100

  - name: "censys_max_pages"
    description: "Maximum number of pages to retrieve for paginated results"
    value: 10

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Censys connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "CensysConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which search indices are valid for the target, and then use the target to select which indices to actually search from for the respective tools as shown in the unit tests",
      "implement proper pagination handling for search results as Censys API returns paginated responses",
      "handle rate limiting gracefully as Censys API has usage quotas and rate limits",
      "support both IPv4 and IPv6 address searches for host-related queries",
      "provide meaningful error messages when API quota is exceeded or authentication fails"
    ]
# !Censys