# SentinelOne
name: "sentinelone"
category: "Endpoint Security"
description: "Create an API integration with SentinelOne to ingest, analyze, and process endpoint security alerts, threat intelligence, and automated response data"

specs:
  - description: |
      The SentinelOne Connector is able to authenticate with SentinelOne Management Console per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The SentinelOne connector is able to authenticate properly with a SentinelOne Management Console;
      The SentinelOne connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      SentinelOne Connector is able to list available sites and groups per user of get_query_target_options
    preconditions: |
      A valid authenticated session with SentinelOne Management Console
    postconditions: |
      Connector successfully enumerates sites and groups to populate the target options of the SentinelOneTarget;

  - description: |
      SentinelOne Connector is able to list site and group information
    preconditions: |
      A valid authenticated session with SentinelOne Management Console
    postconditions: |
      Per the configuration as contained in SentinelOneTarget as provided to SentinelOneConnectorTools, it is possible
      to get a list of sites and groups along with their respective metadata and agent information
      as may be relevant for endpoint security analysis;
      Ensure that the respective get_sentinelone_sites function in the SentinelOneConnectorTools is not hardcoding
      any return values;

  - description: |
      SentinelOne Connector is able to retrieve endpoint security alerts and threats from selected sites
    preconditions: |
      A valid authenticated session with SentinelOne Management Console
    postconditions: |
      Connector successfully retrieves endpoint security alerts, threat detections, and incident data
      from the selected sites provided as parameters to the query tool

  - description: |
      SentinelOne Connector is able to analyze threat intelligence and automated response actions
    preconditions: |
      A valid authenticated session with SentinelOne Management Console
    postconditions: |
      Connector successfully retrieves and analyzes threat intelligence data, automated response actions,
      and endpoint protection metrics for comprehensive security monitoring

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates SentinelOne sites and groups
    preconditions: |
      An existing SentinelOne Management Console API token
    postconditions: |
      Possible to retrieve the list of SentinelOne sites and groups using get_query_target_options
      and to then use this to set the options in a given SentinelOneConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real sites and groups, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List SentinelOne sites for selected targets
    preconditions: |
      An existing SentinelOne Management Console API token
    postconditions: |
      Possible to retrieve the list of SentinelOne sites by way of connector tools;
      This list includes metadata and agent information for endpoint security analysis; 
      These must be real sites, and not simulated;
    function_to_run: !python/file 4-test_list_sites.py

  - description: |
      Retrieve endpoint security alerts from selected SentinelOne sites
    preconditions: |
      An existing SentinelOne Management Console API token with access to threat data
    postconditions: |
      Possible to retrieve endpoint security alerts and threat detections from selected sites;
      This query returns actual security alerts from the target sites; 
      These must be real security alerts, and not simulated;
    function_to_run: !python/file 5-test_security_alerts.py

  - description: |
      Analyze threat intelligence and automated response data
    preconditions: |
      An existing SentinelOne Management Console API token with access to threat intelligence
    postconditions: |
      Possible to retrieve and analyze threat intelligence data and automated response actions;
      The analysis should support comprehensive endpoint security monitoring use cases;
      Results must be real threat intelligence data from the SentinelOne instance;
    function_to_run: !python/file 6-test_threat_intelligence.py

connector_references: 
  - description: "SentinelOne SVG logo"
    file_path: "assets/sentinelone.svg"
    environment_path: "connectors/sentinelone/sentinelone.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "sentinelone_api_token"
    description: "API Token for authenticating with SentinelOne Management Console, note this should be included as api_token in SentinelOneConnectorConfig"
    value: !env/var 

  - name: "sentinelone_base_url"
    description: "Base URL for SentinelOne Management Console, note this should be included as base_url in SentinelOneConnectorConfig"
    value: !env/var 

  - name: "sentinelone_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "sentinelone_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "sentinelone_max_alerts_per_request"
    description: "Maximum number of security alerts to retrieve per request"
    value: 1000

  - name: "sentinelone_threat_status_filter"
    description: "Filter threats by status (active, mitigated, resolved, etc.)"
    value: "active"

  - name: "sentinelone_confidence_threshold"
    description: "Minimum confidence level to include in threat queries (malicious, suspicious, unknown)"
    value: "suspicious"

  - name: "sentinelone_mitigation_status_filter"
    description: "Filter by mitigation status (not_mitigated, mitigated, marked_as_benign)"
    value: "not_mitigated"

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the SentinelOne connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "SentinelOneConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which sites and groups are valid for the target, and then use the target to select which data sources to actually pull data from for the respective tools as shown in the unit tests",
      "focus on endpoint security alerts, threat detections, and automated response capabilities",
      "support filtering by threat status, confidence levels, and mitigation status for targeted security analysis",
      "handle both individual threat detections and aggregated threat intelligence data",
      "include agent status and endpoint protection metrics for comprehensive security monitoring"
    ]
# !SentinelOne