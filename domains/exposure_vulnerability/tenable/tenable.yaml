# Tenable
name: "tenable"
category: "Vulnerability Management"
description: "Create an API integration with Tenable to ingest, analyze, and process vulnerability scan data, risk assessments, and security posture insights"

specs:
  - description: |
      The Tenable Connector is able to authenticate with Tenable.io per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Tenable connector is able to authenticate properly with a Tenable.io instance;
      The Tenable connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Tenable Connector is able to list available scans and assets per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Tenable.io
    postconditions: |
      Connector successfully enumerates scans and assets to populate the target options of the TenableTarget;

  - description: |
      Tenable Connector is able to list scan information and asset groups
    preconditions: |
      A valid authenticated session with Tenable.io
    postconditions: |
      Per the configuration as contained in TenableTarget as provided to TenableConnectorTools, it is possible
      to get a list of scans and asset groups along with their respective metadata and scan results
      as may be relevant for vulnerability analysis;
      Ensure that the respective get_tenable_scans function in the TenableConnectorTools is not hardcoding
      any return values;

  - description: |
      Tenable Connector is able to retrieve vulnerability data from selected scans
    preconditions: |
      A valid authenticated session with Tenable.io
    postconditions: |
      Connector successfully retrieves vulnerability scan data, including CVE details, CVSS scores, and remediation information
      from the selected scans provided as parameters to the query tool

  - description: |
      Tenable Connector is able to analyze risk assessments and security posture metrics
    preconditions: |
      A valid authenticated session with Tenable.io
    postconditions: |
      Connector successfully retrieves and analyzes risk assessment data, asset criticality scores,
      and security posture metrics for comprehensive vulnerability management

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Tenable scans and assets
    preconditions: |
      An existing Tenable.io API access and secret keys
    postconditions: |
      Possible to retrieve the list of Tenable scans and assets using get_query_target_options
      and to then use this to set the options in a given TenableConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real scans and assets, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Tenable scans for selected targets
    preconditions: |
      An existing Tenable.io API access and secret keys
    postconditions: |
      Possible to retrieve the list of Tenable scans by way of connector tools;
      This list includes metadata and scan details for vulnerability analysis; 
      These must be real scans, and not simulated;
    function_to_run: !python/file 4-test_list_scans.py

  - description: |
      Retrieve vulnerability data from selected Tenable scans
    preconditions: |
      An existing Tenable.io API access and secret keys with access to vulnerability scan data
    postconditions: |
      Possible to retrieve vulnerability data including CVE details, CVSS scores from selected scans;
      This query returns actual vulnerability data from the target scans; 
      These must be real vulnerability findings, and not simulated;
    function_to_run: !python/file 5-test_vulnerability_data.py

  - description: |
      Analyze risk assessments and security posture metrics
    preconditions: |
      An existing Tenable.io API access and secret keys with access to risk assessment data
    postconditions: |
      Possible to retrieve and analyze risk assessment data, asset criticality, and security posture metrics;
      The analysis should support comprehensive vulnerability management use cases;
      Results must be real risk data from the Tenable.io instance;
    function_to_run: !python/file 6-test_risk_assessment.py

connector_references: 
  - description: "Tenable logo"
    file_path: "assets/tenable.svg"
    environment_path: "connectors/tenable/tenable.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "tenable_access_key"
    description: "Access Key for authenticating with Tenable.io, note this should be included as access_key in TenableConnectorConfig"
    value: !env/var 

  - name: "tenable_secret_key"
    description: "Secret Key for authenticating with Tenable.io, note this should be included as secret_key in TenableConnectorConfig"
    value: !env/var 

  - name: "tenable_base_url"
    description: "Base URL for Tenable.io API (default: https://cloud.tenable.com)"
    value: "https://cloud.tenable.com"

  - name: "tenable_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "tenable_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "tenable_max_vulnerabilities_per_request"
    description: "Maximum number of vulnerabilities to retrieve per request"
    value: 1000

  - name: "tenable_scan_status_filter"
    description: "Filter scans by status (completed, running, stopped, etc.)"
    value: "completed"

  - name: "tenable_severity_threshold"
    description: "Minimum severity level to include in vulnerability queries (info, low, medium, high, critical)"
    value: "medium"

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Tenable connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "TenableConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which scans and assets are valid for the target, and then use the target to select which data sources to actually pull data from for the respective tools as shown in the unit tests",
      "focus on vulnerability scan data, CVE information, CVSS scores, and risk assessment metrics",
      "support filtering by severity levels, asset groups, and scan status for targeted vulnerability analysis",
      "handle both individual vulnerability findings and aggregated risk assessment data"
    ]
# !Tenable