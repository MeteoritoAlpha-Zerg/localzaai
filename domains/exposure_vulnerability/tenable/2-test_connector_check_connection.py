# 2-test_connector_check_connection.py

async def test_connector_check_connection(zerg_state=None):
    """Test whether connector can successfully verify its connection"""
    print("Testing Tenable connector connection")

    assert zerg_state, "this test requires valid zerg_state"

    tenable_access_key = zerg_state.get("tenable_access_key").get("value")
    tenable_secret_key = zerg_state.get("tenable_secret_key").get("value")
    tenable_base_url = zerg_state.get("tenable_base_url").get("value")

    from connectors.tenable.config import TenableConnectorConfig
    from connectors.tenable.connector import TenableConnector
    
    from connectors.config import ConnectorConfig
    from connectors.connector import Connector

    config = TenableConnectorConfig(
        access_key=tenable_access_key,
        secret_key=tenable_secret_key,
        base_url=tenable_base_url,
    )
    assert isinstance(config, ConnectorConfig), "TenableConnectorConfig should be of type ConnectorConfig"

    # initialize the connector
    connector = TenableConnector
    await connector.initialize(
        config=config,
        user_id="test_user_id",
        encryption_key="test_enc_key"
    )
    assert isinstance(connector, Connector), "TenableConnector should be of type Connector"

    connection_valid = await connector.check_connection()

    if not isinstance(connection_valid, bool) or not connection_valid:
        raise Exception("check_connection did not return True")

    return True