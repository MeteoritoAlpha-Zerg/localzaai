# Rapid7
name: "rapid7"
category: "Vulnerability Management"
description: "Create an API integration with Rapid7 to ingest, analyze, and process vulnerability scan results, risk assessments, and security automation insights"

specs:
  - description: |
      The Rapid7 Connector is able to authenticate with Rapid7 APIs per its implementation in the code 
      environment only
    preconditions: |
      Valid Rapid7 API credentials (username/password or API key) are required for authentication
    postconditions: |
      The Rapid7 connector is able to authenticate properly with Rapid7 InsightVM/Nexpose APIs;
      The Rapid7 connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Rapid7 Connector is able to list available data sources per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Rapid7 APIs
    postconditions: |
      Connector successfully enumerates available data sources (scan results, assets, vulnerabilities, sites) 
      to populate the target options of the Rapid7Target;

  - description: |
      Rapid7 Connector is able to retrieve vulnerability scan results and findings
    preconditions: |
      A valid authenticated session with Rapid7 APIs
    postconditions: |
      Per the configuration as contained in Rapid7Target as provided to Rapid7ConnectorTools, it is possible
      to get scan results including vulnerability findings, severity levels, CVSS scores, and remediation guidance;
      Ensure that the respective get_rapid7_scan_results function in the Rapid7ConnectorTools is not hardcoding
      any return values;

  - description: |
      Rapid7 Connector is able to retrieve asset inventory and risk assessments
    preconditions: |
      A valid authenticated session with Rapid7 APIs
    postconditions: |
      Connector successfully retrieves asset information including IP addresses, hostnames, operating systems,
      risk scores, and vulnerability counts per asset;

  - description: |
      Rapid7 Connector is able to retrieve vulnerability details and remediation insights
    preconditions: |
      A valid authenticated session with Rapid7 APIs
    postconditions: |
      Connector successfully retrieves detailed vulnerability information including CVE mappings,
      exploit availability, remediation steps, and risk prioritization data

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Rapid7 data sources
    preconditions: |
      Valid Rapid7 API credentials
    postconditions: |
      Possible to retrieve the list of Rapid7 data sources using get_query_target_options
      and to then use this to set the options in a given Rapid7ConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real data sources, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      Retrieve Rapid7 vulnerability scan results
    preconditions: |
      Valid Rapid7 API credentials
    postconditions: |
      Possible to retrieve scan results by way of connector tools;
      This list includes vulnerability findings, severity levels, and affected assets; 
      These must be real scan data, and not simulated;
    function_to_run: !python/file 4-test_get_scan_results.py

  - description: |
      Retrieve Rapid7 asset inventory and risk assessments
    preconditions: |
      Valid Rapid7 API credentials
    postconditions: |
      Possible to retrieve asset information including risk scores and vulnerability counts;
      This list includes asset details, operating systems, and risk assessments; 
      These must be real asset data, and not simulated;
    function_to_run: !python/file 5-test_get_assets.py

  - description: |
      Retrieve Rapid7 vulnerability details and remediation insights
    preconditions: |
      Valid Rapid7 API credentials
    postconditions: |
      Possible to retrieve detailed vulnerability information and remediation guidance;
      This list includes CVE details, exploit information, and remediation steps; 
      These must be real vulnerability data, and not simulated;
    function_to_run: !python/file 6-test_get_vulnerabilities.py

connector_references: 
  - description: "Rapid7 logo"
    file_path: "assets/rapid7.png"
    environment_path: "connectors/rapid7/rapid7.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "rapid7_api_url"
    description: "The base URL for Rapid7 InsightVM/Nexpose APIs, note this should be included as api_url in Rapid7ConnectorConfig"
    value: !env/var

  - name: "rapid7_username"
    description: "Username for authenticating with Rapid7 APIs, note this should be included as username in Rapid7ConnectorConfig"
    value: !env/var

  - name: "rapid7_password"
    description: "Password for authenticating with Rapid7 APIs, note this should be included as password in Rapid7ConnectorConfig"
    value: !env/var

  - name: "rapid7_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "rapid7_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "rapid7_default_limit"
    description: "Default limit for API response pagination"
    value: 100

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Rapid7 connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "Rapid7ConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which data sources are valid for the target, and then use the target to select which sources to actually pull data from for the respective tools as shown in the unit tests",
      "Rapid7 APIs require proper basic authentication or API key authentication",
      "implement proper rate limiting and pagination handling for large datasets",
      "handle different data types (scans, assets, vulnerabilities, sites) appropriately",
      "support both InsightVM and legacy Nexpose API endpoints where applicable"
    ]
# !Rapid7