# Qualys
name: "qualys"
category: "Vulnerability Management"
description: "Create an API integration with Qualys to ingest, analyze, and process vulnerability scan results, risk assessments, and security posture insights"

specs:
  - description: |
      The Qualys Connector is able to authenticate with Qualys per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Qualys connector is able to authenticate properly with a Qualys instance;
      The Qualys connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Qualys Connector is able to list asset groups per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Qualys
    postconditions: |
      Connector successfully enumerates asset groups to populate the target options of the QualysTarget;

  - description: |
      Qualys Connector is able to list vulnerability scan results
    preconditions: |
      A valid authenticated session with Qualys
    postconditions: |
      Per the configuration as contained in QualysTarget as provided to QualysConnectorTools, it is possible
      to get a list of scan results along with their respective metadata and vulnerability details
      as may be relevant;
      Ensure that the respective get_qualys_scans function in the QualysConnectorTools is not hardcoding
      any return values;

  - description: |
      Qualys Connector is able to retrieve vulnerability details from selected scans
    preconditions: |
      A valid authenticated session with Qualys
    postconditions: |
      Connector successfully retrieves vulnerability details and findings for the selected scans provided as params
      to the get vulnerabilities tool

  - description: |
      Qualys Connector is able to generate risk assessment and security posture reports
    preconditions: |
      A valid authenticated session with Qualys
    postconditions: |
      Connector successfully generates risk assessment data and security posture insights based on scan results
      and asset groups

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Qualys asset groups
    preconditions: |
      An existing Qualys API credentials
    postconditions: |
      Possible to retrieve the list of Qualys asset groups using get_query_target_options
      and to then use this to set the options in a given QualysConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real asset groups, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Qualys vulnerability scans for selected asset groups in target
    preconditions: |
      An existing Qualys API credentials
    postconditions: |
      Possible to retrieve the list of Qualys vulnerability scans by way of connector tools;
      This list includes details of the scans to be listed in results; 
      These must be real scans, and not simulated;
    function_to_run: !python/file 4-test_list_scans.py

  - description: |
      Retrieve vulnerability details for selected Qualys scans
    preconditions: |
      An existing Qualys API credentials
    postconditions: |
      Possible to retrieve vulnerability details for the selected Qualys scans as passed as params to the connector tools;
      This list only includes vulnerabilities of the target scans to be listed in results; 
      These must be real vulnerabilities, and not simulated;
    function_to_run: !python/file 5-test_vulnerability_retrieval.py

  - description: |
      Generate risk assessment and security posture insights
    preconditions: |
      An existing Qualys API credentials
    postconditions: |
      Possible to generate risk assessment data and security posture insights based on scan results;
      Results should contain meaningful risk metrics and security recommendations;
      These must be real assessment data, and not simulated;
    function_to_run: !python/file 6-test_risk_assessment.py

connector_references: 
  - description: "Qualys logo"
    file_path: "assets/qualys.png"
    environment_path: "connectors/qualys/qualys.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "qualys_url"
    description: "The base URL of the Qualys instance, note this should be included as url in QualysConnectorConfig"
    value: !env/var 

  - name: "qualys_username"
    description: "Username for authenticating with Qualys, note this should be included as username in QualysConnectorConfig"
    value: !env/var 

  - name: "qualys_password"
    description: "Password for authenticating with Qualys, note this should be included as password in QualysConnectorConfig"
    value: !env/var 

  - name: "qualys_api_version"
    description: "Qualys API version to use"
    value: "2.0"

  - name: "qualys_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "qualys_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "qualys_default_page_size"
    description: "Default number of results to return per page"
    value: 1000

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Qualys connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "QualysConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which asset groups are valid for the target, and then use the target to select which asset groups to actually pull data from for the respective tools as shown in the unit tests",
      "handle Qualys-specific data structures like scans, vulnerabilities, assets, and compliance data appropriately",
      "respect Qualys API rate limits and implement proper error handling for vulnerability data",
      "support different Qualys modules like VMDR, WAS, and Policy Compliance as needed"
    ]
# !Qualys