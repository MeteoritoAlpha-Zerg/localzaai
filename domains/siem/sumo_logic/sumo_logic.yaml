# Sumo Logic
name: "sumologic"
category: "Log Analytics & SIEM"
description: "Create an API integration with Sumo Logic for log ingestion and search queries"

stages:
  - name: verify credentials
    type: before
    description: verifies the credentials as provided to zerg for the connector generation
    preconditions: None
    postconditions: Credentials are verified and valid
    code_to_run: !python/program stages/1-verify_credentials.py

  - name: stage data
    type: before
    description: verifies that data instance has valid data in it and if not populates / stages the data in the target instance 
    preconditions: valid credentials per the verify credential stage
    postconditions: Target instance is valid, has valid data per the intents of this specification
    code_to_run: !python/program stages/2-stage-data.py

specs:
  - description: |
      The Sumo Logic Connector is able to authenticate with Sumo Logic per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Sumo Logic connector is able to authenticate properly with a Sumo Logic instance;
      The Sumo Logic connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Sumo Logic Connector is able to list Sumo Logic collectors and sources per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Sumo Logic
    postconditions: |
      Connector successfully enumerates collectors and sources to populate the target options of the SumoLogicTarget;

  - description: |
      Sumo Logic Connector is able to retrieve collector and source information
    preconditions: |
      A valid authenticated session with Sumo Logic
    postconditions: |
      Per the configuration as contained in SumoLogicTarget as provided to SumoLogicConnectorTools, it is possible
      to get a list of collectors and sources along with their respective metadata and other relevant details
      as may be relevant for log analytics and search operations;
      Ensure that the respective get_sumologic_collectors function in the SumoLogicConnectorTools is not hardcoding
      any return values;

  - description: |
      Sumo Logic Connector is able to execute search queries and retrieve log data from selected collectors and sources
    preconditions: |
      A valid authenticated session with Sumo Logic
    postconditions: |
      Connector successfully executes Sumo Logic search queries for the selected collectors and sources provided as params
      to the search tools, supporting log analytics and security investigations

  - description: |
      Sumo Logic Connector is able to retrieve dashboards and saved searches from Sumo Logic platform
    preconditions: |
      A valid authenticated session with Sumo Logic
    postconditions: |
      Connector successfully retrieves dashboards and saved searches from Sumo Logic for analytics and reporting

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Sumo Logic collectors and sources
    preconditions: |
      An existing Sumo Logic instance with valid API credentials
    postconditions: |
      Possible to retrieve the list of Sumo Logic collectors and sources using get_query_target_options
      and to then use this to set the options in a given SumoLogicConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real collectors and sources, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Sumo Logic collectors and sources for selected targets
    preconditions: |
      An existing Sumo Logic instance with valid API credentials
    postconditions: |
      Possible to retrieve the list of Sumo Logic collectors and sources by way of connector tools;
      This list includes details of the collectors and sources including metadata and configurations; 
      These must be real collectors and sources, and not simulated;
    function_to_run: !python/file 4-test_list_collectors.py

  - description: |
      Execute Sumo Logic search queries and retrieve log data from selected collectors and sources
    preconditions: |
      An existing Sumo Logic instance with valid API credentials
    postconditions: |
      Possible to execute Sumo Logic search queries for the selected collectors and sources as passed as params to the connector tools;
      This list includes log data and search results for analysis; 
      These must be real search results, and not simulated;
    function_to_run: !python/file 5-test_search_execution.py

  - description: |
      Retrieve dashboards and saved searches from Sumo Logic platform
    preconditions: |
      An existing Sumo Logic instance with valid API credentials
    postconditions: |
      Possible to retrieve dashboards and saved searches from Sumo Logic platform;
      This includes dashboard configurations and saved search definitions; 
      These must be real dashboards and searches, and not simulated;
    function_to_run: !python/file 6-test_dashboards_searches.py

connector_references: 
  - description: "Sumo Logic logo"
    file_path: "assets/sumologic.svg"
    environment_path: "connectors/sumologic/sumologic.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "sumologic_url"
    description: "The base URL of the Sumo Logic instance (e.g., https://api.sumologic.com), note this should be included as url in SumoLogicConnectorConfig"
    value: !env/var 

  - name: "sumologic_access_id"
    description: "Access ID for authenticating with Sumo Logic API, note this should be included as access_id in SumoLogicConnectorConfig"
    value: !env/var 

  - name: "sumologic_access_key"
    description: "Access key for authenticating with Sumo Logic API, note this should be included as access_key in SumoLogicConnectorConfig"
    value: !env/var

  - name: "sumologic_api_request_timeout"
    description: "Request timeout in seconds"
    value: 120

  - name: "sumologic_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "sumologic_verify_ssl"
    description: "Whether to verify SSL certificates"
    value: true

  - name: "sumologic_search_timeout"
    description: "Timeout for Sumo Logic search execution in seconds"
    value: 600

  - name: "sumologic_max_results"
    description: "Maximum number of results to return per search"
    value: 10000

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Sumo Logic connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "SumoLogicConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which collectors and sources are valid for the target, and then use the target to select which collectors and sources to actually pull data from for the respective tools as shown in the unit tests",
      "support Sumo Logic's access ID and access key authentication method",
      "handle search job lifecycle appropriately (create, poll, retrieve results)",
      "support Sumo Logic's search query language and operators",
      "integrate with Sumo Logic's dashboard and content management capabilities"
    ]
# !Sumo Logic