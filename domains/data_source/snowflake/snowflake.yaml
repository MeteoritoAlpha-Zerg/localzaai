# Snowflake
name: "snowflake"
category: "Cloud Data Warehousing, Security Analytics, and Threat Intelligence"
description: "Create an API integration with Snowflake to ingest, query, and process security logs, threat intelligence, and security event data."

specs:
  - description: |
      The Snowflake Connector is able to authenticate with Snowflake per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Snowflake connector is able to authenticate properly with a Snowflake instance;
      The Snowflake connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Snowflake Connector is able to list databases per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Snowflake
    postconditions: |
      Connector successfully enumerates databases to populate the target options of the SnowflakeTarget;

  - description: |
      Snowflake Connector is able to list database information
    preconditions: |
      A valid authenticated session with Snowflake
    postconditions: |
      Per the configuration as contained in SnowflakeTarget as provided to SnowflakeConnectorTools, it is possible
      to get a list of databases along with their respective description and other relevant database details
      as may be relevant;
      Ensure that the respective get_snowflake_databases function in the SnowflakeConnectorTools is not hardcoding
      any return values;

  - description: |
      Snowflake Connector is able to list tables in a selected database
    preconditions: |
      A valid authenticated session with Snowflake
    postconditions: |
      Connector successfully lists tables for the selected database provided as a param
      to the list tables tool

  # - description: |
  #     Snowflake Connector can ingest security logs into a Snowflake table
  #   preconditions: |
  #     A valid authenticated session with Snowflake and an existing security logs table
  #   postconditions: |
  #     Connector successfully inserts log data into Snowflake

  # - description: |
  #     Snowflake Connector can retrieve threat intelligence data from Snowflake
  #   preconditions: |
  #     A valid authenticated session with Snowflake and an existing threat intelligence dataset
  #   postconditions: |
  #     Connector successfully retrieves threat intelligence indicators

  - description: |
      Snowflake Connector handles API rate limiting and retries queries when necessary
    preconditions: |
      A valid Snowflake API connection
    postconditions: |
      Connector gracefully manages rate-limiting responses

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Snowflake databases
    preconditions: |
      An existing Snowflake username and password credentials
    postconditions: |
      Possible to retrieve the list of Snowflake databases using get_query_target_options
      and to then use this to set the options in a given SnowflakeConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real databases, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Snowflake databases for selected Snowflake databases in target
    preconditions: |
      An existing Snowflake username and password credentials
    postconditions: |
      Possible to retrieve the list of Snowflake databases by way of connector tools;
      This list includes details of the databases to be listed in results; 
      These must be real databases, and not simulated;
    function_to_run: !python/file 4-test_list_databases.py

  - description: |
      Retrieve tables for selected Snowflake database passed as param
    preconditions: |
      An existing Snowflake username and password credentials
    postconditions: |
      Possible to retrieve a set of tables for the selected Snowflake database as passed as a param to the connector tools;
      This list only includes tables of the target database to be listed in results; 
      These must be real tables, and not simulated;
    function_to_run: !python/file 5-test_table_retrieval.py

  # - description: |
  #     Ingest Security Logs into Snowflake Table
  #   preconditions: |
  #     A valid authenticated Snowflake session and an existing logs table
  #   postconditions: |
  #     Connector successfully ingests log data
  #   function_to_run: !python/file 6-test_ingest_logs.py

  # - description: |
  #     Retrieve Threat Intelligence Data from Snowflake
  #   preconditions: |
  #     A valid authenticated Snowflake session with threat intelligence data
  #   postconditions: |
  #     Connector retrieves threat intelligence indicators successfully
  #   function_to_run: !python/file 7-test_fetch_threat_intelligence.py

connector_references: 
  - description: "Snowflake logo"
    file_path: "assets/snowflake.png"
    environment_path: "connectors/snowflake/snowflake.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "snowflake_account_id"
    description: "Account ID for authenticating with Snowflake, note this should be included as account_id in SnowflakeConnectorConfig"
    value: !env/var SNOWFLAKE_ACCOUNT_ID

  - name: "snowflake_user"
    description: "Username for authenticating with Snowflake, note this should be included as user in SnowflakeConnectorConfig"
    value: !env/var SNOWFLAKE_USER

  - name: "snowflake_password"
    description: "Password for authenticating with Snowflake, note this should be included as password in SnowflakeConnectorConfig"
    value: !env/var SNOWFLAKE_PASSWORD

  - name: "snowflake_api_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "snowflake_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Snowflake connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "SnowflakeConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which databases are valid for the target, and then use the target to select which databases to actually pull data from for the respective tools as shown in the unit tests"
    ]
# !Snowflake