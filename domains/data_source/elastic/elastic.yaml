# Elastic
name: "elastic"
category: "Security & Analytics"
description: "Create an API integration with Elastic (Elasticsearch) to ingest logs, security events, and threat intelligence for analysis and visualization"

specs:
  - description: |
      The Elastic Connector is able to authenticate with Elasticsearch per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Elastic connector is able to authenticate properly with an Elasticsearch instance;
      The Elastic connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Elastic Connector is able to list Elasticsearch indices per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Elasticsearch
    postconditions: |
      Connector successfully enumerates indices to populate the target options of the ElasticTarget;

  - description: |
      Elastic Connector is able to retrieve index information and mappings
    preconditions: |
      A valid authenticated session with Elasticsearch
    postconditions: |
      Per the configuration as contained in ElasticTarget as provided to ElasticConnectorTools, it is possible
      to get a list of indices along with their respective mappings and other relevant index details
      as may be relevant for log analysis;
      Ensure that the respective get_elastic_indices function in the ElasticConnectorTools is not hardcoding
      any return values;

  - description: |
      Elastic Connector is able to search and retrieve documents from selected indices
    preconditions: |
      A valid authenticated session with Elasticsearch
    postconditions: |
      Connector successfully searches and retrieves documents for the selected indices provided as params
      to the search tool, supporting log analysis and threat intelligence queries

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Elasticsearch indices
    preconditions: |
      An existing Elasticsearch cluster with valid credentials
    postconditions: |
      Possible to retrieve the list of Elasticsearch indices using get_query_target_options
      and to then use this to set the options in a given ElasticConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real indices, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Elasticsearch indices for selected indices in target
    preconditions: |
      An existing Elasticsearch cluster with valid credentials
    postconditions: |
      Possible to retrieve the list of Elasticsearch indices by way of connector tools;
      This list includes details of the indices including mappings and document counts; 
      These must be real indices, and not simulated;
    function_to_run: !python/file 4-test_list_indices.py

  - description: |
      Search and retrieve documents from selected Elasticsearch indices
    preconditions: |
      An existing Elasticsearch cluster with valid credentials
    postconditions: |
      Possible to search and retrieve documents from the selected Elasticsearch indices as passed as params to the connector tools;
      This list only includes documents from the target indices to be listed in results; 
      These must be real documents, and not simulated;
    function_to_run: !python/file 5-test_document_search.py

connector_references: 
  - description: "Elastic logo"
    file_path: "assets/elastic.svg"
    environment_path: "connectors/elastic/elastic.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "elastic_url"
    description: "The base URL of the Elasticsearch cluster, note this should be included as url in ElasticConnectorConfig"
    value: !env/var 

  - name: "elastic_api_key"
    description: "API Key for authenticating with Elasticsearch, note this should be included as api_key in ElasticConnectorConfig"
    value: !env/var 

  - name: "elastic_username"
    description: "Username for authenticating with Elasticsearch (alternative to API key), note this should be included as username in ElasticConnectorConfig"
    value: !env/var 

  - name: "elastic_password"
    description: "Password for authenticating with Elasticsearch (alternative to API key), note this should be included as password in ElasticConnectorConfig"
    value: !env/var

  - name: "elastic_api_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "elastic_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "elastic_verify_certs"
    description: "Whether to verify SSL certificates"
    value: true

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Elastic connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "ElasticConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which indices are valid for the target, and then use the target to select which indices to actually pull data from for the respective tools as shown in the unit tests",
      "support both API key and username/password authentication methods",
      "handle SSL certificate verification appropriately for security-focused use cases"
    ]
# !Elastic