# Flashpoint
name: "flashpoint"
category: "Threat Intelligence"
description: "Create an API integration with Flashpoint to ingest, analyze, and process deep and dark web intelligence, cyber threat insights, and fraud detection data"

specs:
  - description: |
      The Flashpoint Connector is able to authenticate with Flashpoint APIs per its implementation in the code 
      environment only
    preconditions: |
      Valid Flashpoint API key is required for authentication
    postconditions: |
      The Flashpoint connector is able to authenticate properly with Flashpoint APIs using API key authentication;
      The Flashpoint connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Flashpoint Connector is able to list available data sources per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Flashpoint APIs
    postconditions: |
      Connector successfully enumerates available data sources (alerts, indicators, reports, collections, compromised_credentials) 
      to populate the target options of the FlashpointTarget;

  - description: |
      Flashpoint Connector is able to retrieve threat intelligence alerts and indicators
    preconditions: |
      A valid authenticated session with Flashpoint APIs
    postconditions: |
      Per the configuration as contained in FlashpointTarget as provided to FlashpointConnectorTools, it is possible
      to get threat intelligence alerts including IOCs, threat actor data, malware analysis, and attribution information;
      Ensure that the respective get_flashpoint_alerts function in the FlashpointConnectorTools is not hardcoding
      any return values;

  - description: |
      Flashpoint Connector is able to retrieve deep and dark web intelligence reports
    preconditions: |
      A valid authenticated session with Flashpoint APIs
    postconditions: |
      Connector successfully retrieves intelligence reports including underground forum data, marketplace intelligence,
      cybercriminal activity, and threat landscape analysis;

  - description: |
      Flashpoint Connector is able to retrieve compromised credentials and fraud data
    preconditions: |
      A valid authenticated session with Flashpoint APIs
    postconditions: |
      Connector successfully retrieves compromised credential data and fraud intelligence including
      breach data, stolen credentials, financial fraud indicators, and identity theft intelligence with contextual analysis

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Flashpoint data sources
    preconditions: |
      Valid Flashpoint API credentials
    postconditions: |
      Possible to retrieve the list of Flashpoint data sources using get_query_target_options
      and to then use this to set the options in a given FlashpointConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real data sources, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      Retrieve Flashpoint threat intelligence alerts and indicators
    preconditions: |
      Valid Flashpoint API credentials
    postconditions: |
      Possible to retrieve threat intelligence alerts by way of connector tools;
      This list includes IOCs, threat actor data, and attribution information; 
      These must be real alert data, and not simulated;
    function_to_run: !python/file 4-test_get_alerts.py

  - description: |
      Retrieve Flashpoint deep and dark web intelligence reports
    preconditions: |
      Valid Flashpoint API credentials
    postconditions: |
      Possible to retrieve intelligence reports including underground forum and marketplace data;
      This list includes report details, threat landscape analysis, and cybercriminal activity; 
      These must be real report data, and not simulated;
    function_to_run: !python/file 5-test_get_reports.py

  - description: |
      Retrieve Flashpoint compromised credentials and fraud data
    preconditions: |
      Valid Flashpoint API credentials
    postconditions: |
      Possible to retrieve compromised credential and fraud intelligence data;
      This list includes breach data, stolen credentials, and fraud indicators; 
      These must be real credential and fraud data, and not simulated;
    function_to_run: !python/file 6-test_get_compromised_credentials.py

connector_references: 
  - description: "Flashpoint SVG logo"
    file_path: "assets/flashpoint.svg"
    environment_path: "connectors/flashpoint/flashpoint.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "flashpoint_api_url"
    description: "The base URL for Flashpoint APIs, note this should be included as api_url in FlashpointConnectorConfig"
    value: "https://fp.tools/api/v4"

  - name: "flashpoint_api_key"
    description: "API Key for authenticating with Flashpoint APIs, note this should be included as api_key in FlashpointConnectorConfig"
    value: !env/var

  - name: "flashpoint_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "flashpoint_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "flashpoint_default_limit"
    description: "Default limit for API response pagination"
    value: 100

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Flashpoint connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "FlashpointConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which data sources are valid for the target, and then use the target to select which sources to actually pull data from for the respective tools as shown in the unit tests",
      "Flashpoint APIs require proper API key authentication in headers",
      "implement proper rate limiting and pagination handling for large datasets",
      "handle different data types (alerts, indicators, reports, collections, compromised_credentials) appropriately",
      "support Flashpoint's RESTful API architecture and response formats",
      "handle Flashpoint's specific response formats and error codes properly",
      "implement proper handling of Flashpoint's threat intelligence taxonomy and classification",
      "support Flashpoint's deep and dark web intelligence collection and analysis capabilities"
    ]
# !Flashpoint