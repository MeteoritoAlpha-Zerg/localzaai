# GreyNoise
name: "greynoise"
category: "Threat Intelligence"
description: "Create an API integration with GreyNoise to ingest, analyze, and process IP intelligence data, internet scanning activity, and threat attribution insights"

specs:
  - description: |
      The GreyNoise Connector is able to authenticate with GreyNoise API per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The GreyNoise connector is able to authenticate properly with the GreyNoise API;
      The GreyNoise connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      GreyNoise Connector is able to list available query types and data sources per user of get_query_target_options
    preconditions: |
      A valid authenticated session with GreyNoise API
    postconditions: |
      Connector successfully enumerates query types and data sources to populate the target options of the GreyNoiseTarget;

  - description: |
      GreyNoise Connector is able to list query capabilities and data source information
    preconditions: |
      A valid authenticated session with GreyNoise API
    postconditions: |
      Per the configuration as contained in GreyNoiseTarget as provided to GreyNoiseConnectorTools, it is possible
      to get query capabilities and data sources along with their respective metadata and intelligence features
      as may be relevant for IP intelligence analysis;
      Ensure that the respective get_greynoise_capabilities function in the GreyNoiseConnectorTools is not hardcoding
      any return values;

  - description: |
      GreyNoise Connector is able to retrieve IP intelligence and scanning activity data from selected queries
    preconditions: |
      A valid authenticated session with GreyNoise API
    postconditions: |
      Connector successfully retrieves IP intelligence data, internet scanning activity, and threat attribution
      from the selected queries provided as parameters to the lookup tool

  - description: |
      GreyNoise Connector is able to analyze threat attribution and internet background noise
    preconditions: |
      A valid authenticated session with GreyNoise API
    postconditions: |
      Connector successfully retrieves and analyzes threat attribution data, internet background noise,
      and scanning behavior patterns for comprehensive threat intelligence

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates GreyNoise query types and data sources
    preconditions: |
      An existing GreyNoise API key
    postconditions: |
      Possible to retrieve the list of GreyNoise query types and data sources using get_query_target_options
      and to then use this to set the options in a given GreyNoiseConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real query capabilities, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List GreyNoise capabilities for selected targets
    preconditions: |
      An existing GreyNoise API key
    postconditions: |
      Possible to retrieve the list of GreyNoise capabilities by way of connector tools;
      This list includes metadata and intelligence features for IP analysis; 
      These must be real capabilities, and not simulated;
    function_to_run: !python/file 4-test_list_capabilities.py

  - description: |
      Retrieve IP intelligence data from GreyNoise lookups
    preconditions: |
      An existing GreyNoise API key with access to IP intelligence data
    postconditions: |
      Possible to retrieve IP intelligence and scanning activity data from IP lookups;
      This query returns actual intelligence data from GreyNoise; 
      These must be real IP intelligence results, and not simulated;
    function_to_run: !python/file 5-test_ip_intelligence.py

  - description: |
      Analyze threat attribution and internet scanning patterns
    preconditions: |
      An existing GreyNoise API key with access to threat attribution data
    postconditions: |
      Possible to retrieve and analyze threat attribution data and scanning patterns;
      The analysis should support comprehensive threat intelligence use cases;
      Results must demonstrate actual threat attribution processing capabilities;
    function_to_run: !python/file 6-test_threat_attribution.py

connector_references: 
  - description: "GreyNoise logo"
    file_path: "assets/greynoise.png"
    environment_path: "connectors/greynoise/greynoise.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "greynoise_api_key"
    description: "API Key for authenticating with GreyNoise, note this should be included as api_key in GreyNoiseConnectorConfig"
    value: !env/var 

  - name: "greynoise_base_url"
    description: "Base URL for GreyNoise API (default: https://api.greynoise.io)"
    value: "https://api.greynoise.io"

  - name: "greynoise_verify_ssl"
    description: "Whether to verify SSL certificates"
    value: true

  - name: "greynoise_api_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "greynoise_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "greynoise_max_ips_per_request"
    description: "Maximum number of IPs to query per bulk request"
    value: 1000

  - name: "greynoise_classification_filter"
    description: "Filter by classification (malicious, benign, unknown)"
    value: "all"

  - name: "greynoise_days_back"
    description: "Number of days back to query for historical data"
    value: 30

  - name: "greynoise_include_metadata"
    description: "Whether to include detailed metadata in responses"
    value: true

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the GreyNoise connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "GreyNoiseConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which query types and data sources are valid for the target, and then use the target to select which data sources to actually pull data from for the respective tools as shown in the unit tests",
      "focus on IP intelligence, internet scanning activity, and threat attribution insights",
      "support filtering by classification (malicious, benign, unknown) and scanning patterns for targeted analysis",
      "handle both individual IP lookups and bulk IP intelligence processing",
      "include RIOT (Rule It Out) data, scanning behavior analysis, and threat actor attribution for comprehensive intelligence",
      "support rate limiting and quota management for API usage optimization"
    ]
# !GreyNoise