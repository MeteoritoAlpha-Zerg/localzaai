# Splunk Phantom
name: "splunk_phantom"
category: "Security Orchestration"
description: "Create an API integration with Splunk Phantom for security automation and orchestration"

specs:
  - description: |
      The Splunk Phantom Connector is able to authenticate with Splunk Phantom APIs per its implementation in the code 
      environment only
    preconditions: |
      Valid Splunk Phantom API token or username/password credentials are required for authentication
    postconditions: |
      The Splunk Phantom connector is able to authenticate properly with Splunk Phantom APIs using token-based authentication;
      The Splunk Phantom connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Splunk Phantom Connector is able to list available data sources per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Splunk Phantom APIs
    postconditions: |
      Connector successfully enumerates available data sources (containers, artifacts, playbooks, actions, events) 
      to populate the target options of the SplunkPhantomTarget;

  - description: |
      Splunk Phantom Connector is able to retrieve security containers and artifacts
    preconditions: |
      A valid authenticated session with Splunk Phantom APIs
    postconditions: |
      Per the configuration as contained in SplunkPhantomTarget as provided to SplunkPhantomConnectorTools, it is possible
      to get security containers including severity levels, status, labels, and associated artifacts;
      Ensure that the respective get_splunk_phantom_containers function in the SplunkPhantomConnectorTools is not hardcoding
      any return values;

  - description: |
      Splunk Phantom Connector is able to retrieve playbooks and automation workflows
    preconditions: |
      A valid authenticated session with Splunk Phantom APIs
    postconditions: |
      Connector successfully retrieves playbook information including execution status, automation workflows,
      action results, and orchestration data;

  - description: |
      Splunk Phantom Connector is able to retrieve action results and event data
    preconditions: |
      A valid authenticated session with Splunk Phantom APIs
    postconditions: |
      Connector successfully retrieves action execution results and security event data including
      response actions, automation outcomes, and orchestration metrics with contextual analysis

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Splunk Phantom data sources
    preconditions: |
      Valid Splunk Phantom API credentials
    postconditions: |
      Possible to retrieve the list of Splunk Phantom data sources using get_query_target_options
      and to then use this to set the options in a given SplunkPhantomConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real data sources, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      Retrieve Splunk Phantom security containers and artifacts
    preconditions: |
      Valid Splunk Phantom API credentials
    postconditions: |
      Possible to retrieve security containers by way of connector tools;
      This list includes container details, severity levels, and associated artifacts; 
      These must be real container data, and not simulated;
    function_to_run: !python/file 4-test_get_containers.py

  - description: |
      Retrieve Splunk Phantom playbooks and automation workflows
    preconditions: |
      Valid Splunk Phantom API credentials
    postconditions: |
      Possible to retrieve playbook information including execution status and workflows;
      This list includes playbook details, automation status, and orchestration data; 
      These must be real playbook data, and not simulated;
    function_to_run: !python/file 5-test_get_playbooks.py

  - description: |
      Retrieve Splunk Phantom action results and event data
    preconditions: |
      Valid Splunk Phantom API credentials
    postconditions: |
      Possible to retrieve action results and event data including response outcomes;
      This list includes action details, execution results, and automation metrics; 
      These must be real action data, and not simulated;
    function_to_run: !python/file 6-test_get_actions.py

connector_references: 
  - description: "Splunk Phantom logo"
    file_path: "assets/splunk_phantom.png"
    environment_path: "connectors/splunk_phantom/splunk_phantom.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "splunk_phantom_api_url"
    description: "The base URL for Splunk Phantom APIs, note this should be included as api_url in SplunkPhantomConnectorConfig"
    value: !env/var

  - name: "splunk_phantom_api_token"
    description: "API Token for authenticating with Splunk Phantom APIs, note this should be included as api_token in SplunkPhantomConnectorConfig"
    value: !env/var

  - name: "splunk_phantom_username"
    description: "Username for authenticating with Splunk Phantom APIs (alternative to API token), note this should be included as username in SplunkPhantomConnectorConfig"
    value: !env/var

  - name: "splunk_phantom_password"
    description: "Password for authenticating with Splunk Phantom APIs (alternative to API token), note this should be included as password in SplunkPhantomConnectorConfig"
    value: !env/var

  - name: "splunk_phantom_api_request_timeout"
    description: "Request timeout in seconds"
    value: 60

  - name: "splunk_phantom_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "splunk_phantom_default_limit"
    description: "Default limit for API response pagination"
    value: 100

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Splunk Phantom connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "SplunkPhantomConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which data sources are valid for the target, and then use the target to select which sources to actually pull data from for the respective tools as shown in the unit tests",
      "Splunk Phantom APIs require proper authentication token in headers or basic authentication",
      "implement proper rate limiting and pagination handling for large datasets",
      "handle different data types (containers, artifacts, playbooks, actions, events) appropriately",
      "support Splunk Phantom's RESTful API architecture and response formats",
      "handle Splunk Phantom's specific response formats and error codes properly",
      "implement proper handling of Splunk Phantom's automation and orchestration capabilities",
      "support Splunk Phantom's container and artifact data model for security incidents"
    ]
# !Splunk Phantom