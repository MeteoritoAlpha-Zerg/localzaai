# Acalvio
name: "acalvio"
category: "Security Intelligence"
description: "Create an API integration with Acalvio to ingest, analyze, and process deception-based threat intelligence, attacker behavior insights, and security alerts"

specs:
  - description: |
      The Acalvio Connector is able to authenticate with Acalvio per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Acalvio connector is able to authenticate properly with Acalvio API;
      The Acalvio connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Acalvio Connector is able to list Acalvio deception environments per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully enumerates deception environments to populate the target options of the AcalvioTarget;

  - description: |
      Acalvio Connector is able to list deception environment information
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Per the configuration as contained in AcalvioTarget as provided to AcalvioConnectorTools, it is possible
      to get a list of deception environments along with their respective status and other relevant environment details
      as may be relevant;
      Ensure that the respective get_acalvio_environments function in the AcalvioConnectorTools is not hardcoding
      any return values;

  - description: |
      Acalvio Connector is able to list security alerts for a selected environment
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully lists security alerts for the selected deception environment provided as a param
      to the list alerts tool

  - description: |
      Acalvio Connector is able to retrieve threat intelligence insights
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully retrieves threat intelligence insights including attacker behavior patterns,
      tactics, techniques, and procedures (TTPs) from deception interactions

  - description: |
      Acalvio Connector is able to list deception assets and honeypots
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully lists deception assets, honeypots, and decoy systems within selected environments
      with their status and interaction data

  - description: |
      Acalvio Connector is able to retrieve detailed alert information
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully retrieves detailed alert information including attacker behavior analysis,
      attack vectors, and recommended response actions

  - description: |
      Acalvio Connector is able to process attacker behavior insights
    preconditions: |
      A valid authenticated session with Acalvio
    postconditions: |
      Connector successfully processes and analyzes attacker behavior patterns from deception interactions,
      providing insights into attack methodologies and threat actor profiles

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Acalvio deception environments
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve the list of Acalvio deception environments using get_query_target_options
      and to then use this to set the options in a given AcalvioConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real environments, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Acalvio deception environments for selected environments in target
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve the list of Acalvio deception environments by way of connector tools;
      This list includes details of the environments to be listed in results; 
      These must be real environments, and not simulated;
    function_to_run: !python/file 4-test_list_environments.py

  - description: |
      Retrieve security alerts for selected environment passed as param
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve a set of security alerts for the selected deception environment as passed as a param to the connector tools;
      This list only includes alerts of the target environment to be listed in results; 
      These must be real alerts, and not simulated;
    function_to_run: !python/file 5-test_alert_retrieval.py

  - description: |
      Retrieve threat intelligence insights from Acalvio platform
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve threat intelligence insights including attacker behavior patterns and TTPs;
      The insights retrieval includes proper analysis of deception interactions;
      This must be real intelligence data, and not simulated;
    function_to_run: !python/file 6-test_threat_intelligence.py

  - description: |
      List deception assets and honeypots in selected environment
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve deception assets, honeypots, and decoy systems with status information;
      The asset list includes interaction data and deployment status;
      This must be real asset data, and not simulated;
    function_to_run: !python/file 7-test_deception_assets.py

  - description: |
      Retrieve detailed alert information including attacker behavior analysis
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to retrieve complete alert details including behavioral analysis and response recommendations;
      The details include attack vector analysis and threat actor profiling;
      This must be real alert data, and not simulated;
    function_to_run: !python/file 8-test_alert_details.py

  - description: |
      Process and analyze attacker behavior insights from deception interactions
    preconditions: |
      An existing Acalvio API credentials and access
    postconditions: |
      Possible to process attacker behavior patterns and generate insights from deception data;
      The analysis includes attack methodology and threat actor characteristics;
      This must be real behavioral data, and not simulated;
    function_to_run: !python/file 9-test_behavior_insights.py

connector_references: 
  - description: "Acalvio logo"
    file_path: "assets/acalvio.png"
    environment_path: "connectors/acalvio/acalvio.png"
    format: "png"
    required: true
    read_only: true

user_references: []

configs:
  - name: "acalvio_api_url"
    description: "Acalvio API base URL, note this should be included as api_url in AcalvioConnectorConfig"
    value: !env/var 

  - name: "acalvio_api_key"
    description: "Acalvio API Key for authentication, note this should be included as api_key in AcalvioConnectorConfig"
    value: !env/var 

  - name: "acalvio_username"
    description: "Acalvio username for authentication, note this should be included as username in AcalvioConnectorConfig"
    value: !env/var 

  - name: "acalvio_password"
    description: "Acalvio password for authentication, note this should be included as password in AcalvioConnectorConfig"
    value: !env/var 

  - name: "acalvio_tenant_id"
    description: "Acalvio tenant/organization ID, note this should be included as tenant_id in AcalvioConnectorConfig"
    value: !env/var 

  - name: "acalvio_api_version"
    description: "Acalvio API version to use"
    value: "v2"

  - name: "acalvio_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "acalvio_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "max_alerts_per_request"
    description: "Maximum number of alerts to retrieve per request"
    value: 100

  - name: "threat_intelligence_lookback_days"
    description: "Number of days to look back for threat intelligence data"
    value: 30

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Acalvio connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "AcalvioConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which deception environments are valid for the target, and then use the target to select which environments to actually pull data from for the respective tools as shown in the unit tests",
      "Acalvio API typically uses token-based authentication or username/password with API key",
      "Handle deception-specific data types including honeypots, decoys, and threat intelligence",
      "Support real-time alert processing and threat behavior analysis",
      "Follow security best practices for handling sensitive threat intelligence data",
      "Process MITRE ATT&CK framework mappings for attacker techniques",
      "Handle various alert severity levels and threat classifications",
      "Support filtering and correlation of deception-based security events"
    ]
# !Acalvio