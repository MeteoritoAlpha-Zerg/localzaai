# Discord
name: "discord"
category: "Communication & Collaboration"
description: "Create an API integration with Discord per its API specification"

specs:
  - description: |
      The Discord Connector is able to authenticate with Discord per its implementation in the code 
      environment only
    preconditions: |
      This spec has no strict preconditions
    postconditions: |
      The Discord connector is able to authenticate properly with a Discord instance;
      The Discord connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;

  - description: |
      Discord Connector is able to list Discord guilds per user of get_query_target_options
    preconditions: |
      A valid authenticated session with Discord
    postconditions: |
      Connector successfully enumerates guilds to populate the target options of the DiscordTarget;

  - description: |
      Discord Connector is able to list guild information
    preconditions: |
      A valid authenticated session with Discord
    postconditions: |
      Per the configuration as contained in DiscordTarget as provided to DiscordConnectorTools, it is possible
      to get a list of guilds along with their respective description and other relevant guild details
      as may be relevant;
      Ensure that the respective get_discord_guilds function in the DiscordConnectorTools is not hardcoding
      any return values;

  - description: |
      Discord Connector is able to list channels in a selected guild
    preconditions: |
      A valid authenticated session with Discord
    postconditions: |
      Connector successfully lists channels for the selected guild provided as a param
      to the list channels tool

  - description: |
      Discord Connector is able to retrieve messages from selected channels
    preconditions: |
      A valid authenticated session with Discord
    postconditions: |
      Connector successfully retrieves messages from the selected channels provided as a param
      to the message retrieval tool

tests:
  - description: |
      This checks to see that the connector is able to return a listing of tools
    preconditions: |
      A data connector implementation per the provided interfaces
    postconditions: |
      The data connector is able to provide a list of supported tools and interfaces
    function_to_run: !python/file 1-test_tools_interface.py

  - description: |
      This checks that the connector can successfully verify its connection
    preconditions: |
      A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: |
      The check_connection method returns True if the connector is correctly configured
    function_to_run: !python/file 2-test_connector_check_connection.py

  - description: |
      get_query_target_options enumerates Discord guilds
    preconditions: |
      An existing Discord bot token and permissions
    postconditions: |
      Possible to retrieve the list of Discord guilds using get_query_target_options
      and to then use this to set the options in a given DiscordConnectorConfig which is 
      subclassed from ConnectorConfig - adheres to example API response in query_target_options.py;
      These must be real guilds, and not simulated;
    function_to_run: !python/file 3-test_query_target_options.py

  - description: |
      List Discord guilds for selected Discord guilds in target
    preconditions: |
      An existing Discord bot token and permissions
    postconditions: |
      Possible to retrieve the list of Discord guilds by way of connector tools;
      This list includes details of the guilds to be listed in results; 
      These must be real guilds, and not simulated;
    function_to_run: !python/file 4-test_list_guilds.py

  - description: |
      Retrieve channels for selected Discord guild passed as param
    preconditions: |
      An existing Discord bot token and permissions
    postconditions: |
      Possible to retrieve a set of channels for the selected Discord guild as passed as a param to the connector tools;
      This list only includes channels of the target guild to be listed in results; 
      These must be real channels, and not simulated;
    function_to_run: !python/file 5-test_channel_retrieval.py

  - description: |
      Retrieve messages for selected Discord channels passed as param
    preconditions: |
      An existing Discord bot token and permissions
    postconditions: |
      Possible to retrieve a set of messages for the selected Discord channels as passed as a param to the connector tools;
      This list only includes messages of the target channels to be listed in results; 
      These must be real messages, and not simulated;
    function_to_run: !python/file 6-test_message_retrieval.py

connector_references: 
  - description: "Discord SVG logo"
    file_path: "assets/discord.svg"
    environment_path: "connectors/discord/discord.svg"
    format: "svg"
    required: true
    read_only: true

user_references: []

configs:
  - name: "discord_bot_token"
    description: "Bot token for authenticating with Discord API, note this should be included as bot_token in DiscordConnectorConfig"
    value: !env/var 

  - name: "discord_api_base_url"
    description: "Base URL for Discord API (defaults to https://discord.com/api/v10)"
    value: "https://discord.com/api/v10"

  - name: "discord_api_version"
    description: "Discord API version to use (defaults to v10)"
    value: "v10"

  - name: "discord_api_request_timeout"
    description: "Request timeout in seconds"
    value: 30

  - name: "discord_api_max_retries"
    description: "Number of times to retry API requests upon failure"
    value: 3

  - name: "discord_rate_limit_delay"
    description: "Delay in seconds between API requests to respect rate limiting"
    value: 1

  - name: "discord_message_limit"
    description: "Maximum number of messages to retrieve per channel request"
    value: 100

  - name: "discord_include_embeds"
    description: "Include message embeds in message retrieval"
    value: true

  - name: "discord_include_reactions"
    description: "Include message reactions in message retrieval"
    value: true

  - name: "additional considerations"
    description: |
      Additional considerations for the generation of specifically the Discord connector 
      with regards to the connector framework as provided - please keep these strongly in mind
    value: [
      "DiscordConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig config",
      "authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)",
      "utilize the query target options to determine which guilds are valid for the target, and then use the target to select which guilds to actually pull data from for the respective tools as shown in the unit tests",
      "implement proper rate limiting as Discord API has strict rate limits and will return 429 responses",
      "handle Discord's permission system properly - ensure bot has necessary permissions for requested operations",
      "respect Discord's API guidelines and terms of service, particularly regarding message content and user privacy",
      "implement proper pagination for large result sets as Discord API returns paginated responses",
      "handle different channel types appropriately (text, voice, category, thread, etc.)",
      "ensure proper handling of Discord snowflake IDs (64-bit integers) for all Discord entities",
      "implement proper error handling for common Discord API errors (permissions, rate limits, not found)"
    ]
# !Discord