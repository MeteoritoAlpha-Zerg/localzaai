name: jira
description: Agent manifest exported from b6a23490576649c1aa5bfb0dd1f9c3db
category: agent_export
stages: []
specs:
- provenance: null
  description: 'Implementation does not simulate, fake, or cheat functionality

    '
  preconditions: 'A valid implementation and configuration

    '
  postconditions: "The implementation accomplishes the all evaluations and unit tests\
    \ and code \ndoes not simulate, cheat or fake any aspect of it's functionality\n"
- provenance: null
  description: 'Placeholder core domain specification

    '
  preconditions: 'no preconditions

    '
  postconditions: 'No postconditions

    '
- provenance: null
  description: Connector retrieves the top 10 GitHub repositories
  preconditions: A valid network connection and no API rate limits.
  postconditions: The connector returns exactly 10 repositories with valid data (name,
    star count, and URL).
- provenance: null
  description: Connector handles API errors gracefully
  preconditions: Simulated API error (for example, using an invalid API token).
  postconditions: The connector logs errors and either returns fallback data or an
    error message.
- provenance: null
  description: Connector implements retry logic on failed requests
  preconditions: A simulated API failure condition.
  postconditions: The connector retries failed API calls up to the maximum configured
    retries.
tests:
- provenance: null
  description: This is a place holder unit test that doesn't do anything
  preconditions: This unit test has no strict preconditions
  postconditions: This unit test has no strict postconditions
  entry_point: test_placeholder
  function_to_run: null
  code: "def test_placeholder(zerg_state=None):\n  \"\"\"Placeholder test that always\
    \ return True\"\"\"\n  \n  if zerg_state:\n    zerg_benchmark_name = zerg_state.get(\"\
    benchmark name\").get(\"value\")\n    print(f\"Placeholder Unit Test for benchmark\
    \ name: {zerg_benchmark_name}\")\n\n  else:\n    print(f\"NO ZERG STATE PROVIDED\
    \ - Placeholder Unit Test for benchmark\")\n\n  return True\n"
- provenance: null
  description: Retrieve Top 10 GitHub Repositories
  preconditions: A valid API connection to GitHub.
  postconditions: The connector returns a list of 10 repositories with keys 'name',
    'stars', and 'url'.
  entry_point: test_get_top_repositories
  function_to_run: null
  code: "def test_get_top_repositories(zerg_state=None):\n    \"\"\"Test retrieving\
    \ the top 10 GitHub repositories.\"\"\"\n    print(\"Fetching top 10 GitHub repositories\"\
    )\n\n    # Attempt to import the GitHubConnector object.\n    from main import\
    \ GitHubConnector\n\n    connector = GitHubConnector()\n    repos = connector.get_top_repositories(count=10)\n\
    \    assert isinstance(repos, list), \"Response is not a list\"\n    assert len(repos)\
    \ == 10, \"Did not retrieve exactly 10 repositories\"\n\n    for repo in repos:\n\
    \        assert isinstance(repo, dict), \"Repository data is not a dictionary\"\
    \n        assert \"name\" in repo, \"Missing repository name\"\n        assert\
    \ \"stars\" in repo, \"Missing repository star count\"\n        assert \"url\"\
    \ in repo, \"Missing repository URL\"\n\n    print(\"Retrieved repositories:\"\
    , repos)\n\n    return True\n"
references:
- provenance: null
  url: null
  file_path: workspace/images/searanch_jpg.jpg
  absolute_path: /tmp/zerg/agent_workspace_e2hl0ppv/workspace/images/searanch_jpg.jpg
  workspace_path: workspace/images/searanch_jpg.jpg
  environment_path: null
  description: example JPG
  format: jpg
  required: true
  read_only: true
- provenance: null
  url: null
  file_path: workspace/text/text.txt
  absolute_path: /tmp/zerg/agent_workspace_e2hl0ppv/workspace/text/text.txt
  workspace_path: workspace/text/text.txt
  environment_path: null
  description: example environment text
  format: txt
  required: true
  read_only: true
- provenance: null
  url: null
  file_path: workspace/images/searanch_png.png
  absolute_path: /tmp/zerg/agent_workspace_e2hl0ppv/workspace/images/searanch_png.png
  workspace_path: workspace/images/searanch_png.png
  environment_path: null
  description: example core domain PNG
  format: png
  required: true
  read_only: true
configs:
- provenance: null
  name: timeout
  value: 60
  description: Request timeout in seconds
- provenance: null
  name: max_retries
  value: 3
  description: Maximum number of retries
- provenance: null
  name: considerations
  value:
  - if you find yourself hitting the same error, or issue, please consider 2-3 alternative
    approaches and choose one of them to try next
  description: 'Various considerations - please keep these strongly in mind

    '
- provenance: null
  name: domain_config
  value: This is just a placeholder please ignore
  description: Placeholder domain config
- provenance: null
  name: endpoint
  value: https://api.github.com/search/repositories
  description: GitHub API endpoint for repository search
metadata:
  agent_uuid: b6a23490576649c1aa5bfb0dd1f9c3db
  status: IDLE
  max_depth: 500
  export_timestamp: '2025-08-27 16:10:18.543672'
  environment_type: FSEnvironment
  environment_name: fs_environment
  environment_root: /tmp/zerg/agent_workspace_e2hl0ppv/environment
  workspace_path: ''
  workspace_files_count: 0
