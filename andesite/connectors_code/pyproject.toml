[project]
name = "connectors"
version = "1.4.0+396a75dbd"
description = "Metamorph connectors to external data sources"
authors = [{name = "The Andesite Team"} ]
readme = "README.md"
requires-python = ">=3.12, <3.13"
dependencies = [
    "core",
    "common",
    "boto3 (>=1.37.2,<1.37.4)",
    "boto3-stubs (>=1.37.2,<1.37.4)",
    "pydantic-settings==2.9.*",
    "toml==0.10.*",
    "motor==3.6.*",
    "motor-stubs==1.7.*",
    "splunk-sdk==2.0.*",
    "cachetools==5.3.*",
    "types-toml==0.10.*",
    "types-cachetools==5.3.*",
    "tqdm==4.66.*",
    "types-tqdm==4.67.*",
    "opentelemetry-api==1.27.*",
    "opentelemetry-sdk==1.27.*",
    "opentelemetry-exporter-otlp==1.27.*",
    "opentelemetry-instrumentation-fastapi==0.48b0",
    "opentelemetry-resourcedetector-docker==0.4.*",
    "opentelemetry-resourcedetector-kubernetes==0.3.*",
    "types-pyyaml==6.0.*",
    "domaintools-api==2.2.*",
    "aiohttp==3.11.*",
    "snowflake-connector-python==3.14.*",
    "types-python-dateutil==2.9.*",
    "simple-salesforce==1.12.*",
    "aiobotocore==2.22.*",
    "types-aiobotocore==2.22.*",
    "elasticsearch==8.17.*",
    "pydantic (>=2.11.5,<3.0.0)",
    "botocore (>=1.37.2,<1.37.4)",
    "httpx (>=0.27.0,<0.28.0)",
    "httpcore (>=1.0.9,<2.0.0)",
    "python-dateutil (>=2.9.0,<3.0.0)",
    "redis (>=5.0,<6.0)",
]

[tool.poetry]
packages = [
    { include = "connectors" },
    { include = "connectors/py.typed" }
]

[tool.poetry.dependencies]
common = { path = "../common", develop = true }
core = { path = "../core", develop = true }

[project.optional-dependencies]
dev = [
    "mypy==1.14.*",
    "ruff==0.7.*",
    "isort==5.13.*",
    "pytest==8.2.*",
    "pytest-cov==5.0.*",
    "pytest-asyncio==0.23.*",
    "mongomock-motor==0.0.*",
    "setuptools==70.2.*",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
include = [
    "connectors/sentinel_one/**.py"
]
exclude = [
    "connectors/athena/**/*.py",
    "connectors/dataset_descriptions/**/*.py",
    "connectors/dataset_structures/**/*.py",
    "connectors/domaintools/**/*.py",
    "connectors/splunk/**.py",
    "connectors/tenable/**.py",
    "connectors/util/**.py",
    "connectors/*.py",
    "tests/dataset_descriptions/**.py",
    "tests/dataset_structures/**.py",
    "tests/events/**.py",
    "tests/splunk/**.py"
]
line-length = 120

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
]
unfixable = [
    "ERA",  # do not autoremove commented out code
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "from .* import ",
    "import ",
    "\\(ConnectorConfig\\):",
    "\\(ConnectorTargetInterface\\):",
    "def get_dataset_paths",
    "= Connector\\("
]
